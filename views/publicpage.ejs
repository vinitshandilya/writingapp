<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap JS (optional, if you need JavaScript features) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <title>The writing app</title>
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/simplemde@1.11.2/dist/simplemde.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://kit.fontawesome.com/03adeb66cc.js" crossorigin="anonymous"></script>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Hedvig+Letters+Serif:opsz@12..24&display=swap" rel="stylesheet">

    <style>

      a {
            color: #1c4175;
        }

        .btn-primary {
            background-color: transparent;
            border-color: #4287f5;
            color: #4287f5;
        }

        .btn-primary:hover {
            background-color: #1c4175;
            border-color: #1c4175;
            color: #fff;
        }

        .btn-rounded {
            display: inline-block;
            border-radius: 15px;
            background-color: #1c4175;
            color: #fff;
            border: none;
            box-shadow: none;
            font-size: smaller;
            padding: 10 20px;
            margin-right: 5px;
        }

        .ql-footnote {
            color: #999;
        }

        .ql-footnote {
            position: relative;
            cursor: help;
        }

        .ql-footnote:hover::after {
            content: attr(fntitle);
            display: block;
            position: absolute;
            left: 100%;
            top: 0;
            width: 600px;
            max-width: 300px;
            white-space: normal;
            word-wrap: break-word;
            padding: 0.5em;
            background: #ffffff;
            border: 1px solid #d7d0d0;
            box-shadow: 2px 2px 5px rgba(41, 41, 41, 0.2);
            z-index: 1;
            border-radius: 15px;
            font-size: 13px;
            color: #333;
            line-height: 1.4;
        }

        .left-section {
            background-color: #fff;
            padding: 15px;
            height: 100vh;
        }

        .mid-section {
            background-color: #fff;
            padding: 15px;
            height: 100vh;
        }

        .right-section {
            background-color: #fff;
            height: 100vh;
            padding: 15px;
        }

        #footnoteList {
            margin-top: auto; /* Push to the bottom */
            list-style-type: none; /* Remove bullet points */
            padding: 0;
        }

        #footnoteList li {
            padding-left: 0px;
            font-size: 15px;
            font-family: 'Times New Roman', Times, serif;
            color: #585858;
        }

        /* figcaption {
            padding-left: 0px;
            padding-top: 15px;
            font-size: 15px;
            font-family: 'Times New Roman', Times, serif;
            color: #585858;
        } */

        .canvas {
            font-family: 'Hedvig Letters Serif', serif;
            line-height: 2.0;
        }

        .navbar {
            padding-left: 20px;
            padding-right: 20px;
            font-weight: bold;
        }

        .blog-title {
            color: #1c4175;
        }

        .ribbon-area {
            color: #1c4175;
        }

        #bookmark-icon {
            display: none;
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 24px;
            color: #1c4175;
            cursor: pointer;
        }

        #tags {
            color: #1c4175;
        }

        .tags-container {
            display: inline-block;
            padding: 0px 10px;
        }

        .monetization-banner {
            padding: 15px;
            margin-bottom: 20px;
            border: 1px solid #b0c9eb;
            background-color: rgba(78, 149, 241, 0.2); /* #0F9D58 with 70% transparency */
            border-color: #1c4175; /* Border color to match */
            /* color: #fff; */
            border-radius: 5px;
        }

        .translucent-mask {
            display: none;
            position: fixed;
            top: 0vh;
            left: 0;
            width: 100%;
            height: 100vh;
            background-color: rgba(255, 255, 255, 0.5);
            backdrop-filter: blur(10px);
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .center-content {
            text-align: center;
        }

        .image-container {
         padding: 10px;
         }

    </style>
</head>
<body>
  <body>

    <nav class="navbar navbar navbar-expand-lg navbar-light" style="background-color: transparent;">
        <a class="navbar-brand" href="/homepage"><i class="fa-solid fa-angle-left"></i></a></a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
            <ul class="navbar-nav ms-auto mt-2 mt-lg-0">
                <a href="/" class="btn btn-primary">Join for free!</a>
            </ul>
        </div>
    </nav>

    <div class="container-fluid">
        <div class="row">
            <!-- Left Section (25% width) -->
            <div class="col-md-3 left-section">
            </div>
    
            <!-- Middle Section (50% width) -->
            <div class="col-md-6 mid-section">
                <div id="blogheader" class="container-fluid ribbon-area"></div>
                <div id="preview" class="container-fluid canvas"></div>
                <br>
                <% if (blog && blog.tags.length > 1) { %>
                <div class="tags-container">
                    <div id="tags" class="container-fluid"><i class="fa-solid fa-tags"></i></div>
                </div>
                <hr>
                <% } %>
                <ul id="footnoteList"></ul>
                <br>
            </div>
    
            <!-- Right Section (25% width) -->
            <div class="col-md-3 right-section">
            </div>

        </div>
    </div>

    <% if (blog && blog.paywall) { %>
        <div class="translucent-mask">
            <div class="center-content">
                <p>This is a paid article. Join today to get full access!</p>
                <a href="/" class="btn btn-primary">Join for free!</a>
            </div>
        </div>
    <% } %>

    

    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <!-- Bootstrap core JS-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>


    <script>

        var blogheader = document.getElementById('blogheader');
        var previewDiv = document.getElementById('preview');
        var markedUpDom;
        var bloguserid;
        var blogid;

        document.addEventListener('DOMContentLoaded', function () {
            const url = new URL(window.location.href);
            const pathname = url.pathname;
            const parts = pathname.split('/');
            const blogid = parts[parts.length - 1];
            if (blogid !== null && blogid !== undefined) {
                loadBlogDetails(blogid);
            } 
        });
    
        function loadBlogDetails(blogId) {
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    var blogDetails = JSON.parse(xhr.responseText);
                    bloguserid = blogDetails.blog.userid;
                    blogid = blogDetails.blog._id;
                    updateBlogDetails(blogDetails);
                }
            };
            xhr.open('GET', `/index/blogs/public/blog/${blogId}`, true);
            xhr.send();
        }
    
        function updateBlogDetails(blogDetails) {
            var editorContent = blogDetails.blog.body;
            const dateObj = new Date(blogDetails.blog.timestamp);
            var timeToread = calculateReadingTime(blogDetails.blog.body, 230);
            const formatString = { month: 'short', day: 'numeric', year: 'numeric' };
            const formattedTime = dateObj.toLocaleString("en-US", formatString).toUpperCase();
            
            markedUpDom = recomputeRender(editorContent);

            blogheader.innerHTML = `
                <h1 class="mt-4 blog-title">${blogDetails.blog.title}</h1>
                <p style="font-size: 22px; color: #686868">${blogDetails.blog.subtitle}</p>
                <div>
                    <p style="font-size: smaller; display: inline-block; margin-right: 10px;"><i class="fa-regular fa-pen-to-square"></i> ${blogDetails.blog.author}</p>
                    <p style="font-size: smaller; display: inline-block; margin-right: 10px;"><i class="fa-regular fa-calendar"></i> ${formattedTime}</p>
                    <p style="font-size: smaller; display: inline-block; margin-right: 10px;"><i class="far fa-clock"></i> ${timeToread}</p>
                </div> `;

            previewDiv.innerHTML = `
                <div><p>${markedUpDom}</p></div>
            `;
            
            // Parse footnotes markup and add to page
            var footnotes = listFootnotes(markedUpDom);
            if(footnotes.length > 0) {
                var footnoteList = document.getElementById('footnoteList');
                var heading = document.createElement('h4');
                heading.innerText = 'Footnotes';
                heading.style.fontWeight = 'bold';
                heading.style.color = '#1c4175';
                footnoteList.appendChild(heading);

                footnotes.forEach(function (footnote) {
                    var listItem = document.createElement('li');
                    listItem.textContent = footnote;
                    footnoteList.appendChild(listItem);

                });
            }

            // Insert tags
            var tags = blogDetails.blog.tags;
            var tagsDiv = document.getElementById('tags');

            if (tags.length > 0 && tagsDiv) {
                tagsDiv.style.display = "block";
                var tagsContainer = document.createElement('div');
                tagsContainer.classList.add('tags-container');

                tags.forEach(tag => {
                    var tagElement = document.createElement('span');
                    tagElement.classList.add('tag');
                    tagElement.textContent = tag + ', ';
                    tagsContainer.appendChild(tagElement);
                });

                // Append the container to the tagsDiv
                tagsDiv.appendChild(tagsContainer);
            } else {
                tagsDiv.style.display = "none";
            }

        }

        // parse footnote markup and return updated html string
        function recomputeRender(domstr) {
            var counter = 1;
            var regex = /\[\^(.*?)\]/g; // Capture the text inside `[^]` using capturing group
            var previewContent = domstr.replace(regex, function(match, customFootnote) {
                return `
                <span class="ql-footnote" fntitle="${customFootnote}">
                    <sub>
                        <a href="#">[${(counter++)}]</a>
                    </sub>
                </span>
                `;
            });
            return replaceImgWithDivs(previewContent);
        }

        function replaceImgWithDivs(htmlString) {
        var imgRegex = /<img([^>]*)>/g;

        var modifiedHtml = htmlString.replace(imgRegex, function(match, imgAttributes) {
                return '<div class="row justify-content-center">' +
                        '<div class="col-md-11 mx-auto">' +
                            '<div class="image-container text-center">' +
                                '<img class="img-fluid" style="max-height: 100%;"' + imgAttributes + '>' +
                            '</div>' +
                        '</div>' +
                    '</div>';
            });

            return modifiedHtml;
        }


        function calculateReadingTime(paragraph, wordsPerMinute) {
            // Assuming an average of 200 words per minute
            const defaultWordsPerMinute = 200;
            const wpm = wordsPerMinute || defaultWordsPerMinute;
            const wordCount = paragraph.split(/\s+/).length;
            const readingTime = Math.ceil(wordCount / wpm);

            return readingTime + ' MIN READ';
        }

        function listFootnotes(domstr) {

            const parser = new DOMParser();
            const document = parser.parseFromString(domstr, "text/html");

            const footnotes = [];
            const footnoteElements = document.querySelectorAll('.ql-footnote');

            for (const element of footnoteElements) {
                const footnote_index = element.textContent;
                const fntitle = element.getAttribute('fntitle');

                if (fntitle) {
                    footnotes.push(`${footnote_index} ${fntitle}`);
                }
            }

            return footnotes;
        }

    </script>

</body>
</html>
