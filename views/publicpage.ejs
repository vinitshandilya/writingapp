<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap JS (optional, if you need JavaScript features) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <title>The writing app</title>
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/simplemde@1.11.2/dist/simplemde.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://kit.fontawesome.com/03adeb66cc.js" crossorigin="anonymous"></script>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&display=swap" rel="stylesheet">

    <style>

        a {
         color: #1c4175;
         }
         .custom-navbar {
         padding-left: 20px;
         padding-right: 20px;
         /* border-bottom: 1px solid rgb(208, 203, 203); */
         }
         .profile-btn {
         text-align: left;
         display: flex;
         flex-direction: column;
         align-items: flex-start;
         background-color: transparent;
         color: #1c4175;
         border: none;
         }
         .profile-btn:hover, .btn-ptr {
         background-color: transparent;
         color: #1c4175;
         border: none;
         }
         .profile-btn:focus,
         .profile-btn:active,
         .btn-ptr:focus,
         .btn-ptr:active {
         border: none;
         outline: none;
         box-shadow: none;
         }
         .circle {
         width: 40px; /* Adjust the size of the circle as needed */
         height: 40px;
         background-color: #1c4175; /* Set the color of the circle */
         border-radius: 50%;
         display: flex;
         justify-content: center;
         align-items: center;
         color: white; /* Text color */
         font-size: 20px; /* Adjust the font size as needed */
         font-weight: bold; /* Adjust the font weight as needed */
         }
         .dropdown-menu {
         border:1px solid rgb(208, 203, 203);
         border-radius: 5px;
         box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
         }
         .dropdown-item {
         font-size: small;
         color: gray;
         }
         .btn-primary {
         background-color: transparent;
         border-color: #4287f5;
         color: #4287f5;
         }
         .btn-primary:hover {
         background-color: #1c4175;
         border-color: #1c4175;
         color: #fff;
         }
         .btn-rounded {
         display: inline-block;
         border-radius: 15px;
         background-color: #1c4175;
         color: #fff;
         border: none;
         box-shadow: none;
         font-size: smaller;
         padding: 10 20px;
         margin-right: 5px;
         }
         .ql-container {
         border: none !important;
         }
         .ql-editor {
          font-size: 17px;
          font-family: 'Libre Baskerville', serif;
          padding: 0;
          line-height: 1.9;
         }
         
         .blog-title {
         color: #1c4175;
         }
         .ribbon-area {
         color: #1c4175;
         }

         .tags-container {
         display: inline-block;
         padding: 0px 10px;
         }
         .monetization-banner {
         padding: 15px;
         margin-bottom: 20px;
         border: 1px solid #b0c9eb;
         background-color: rgba(78, 149, 241, 0.2); /* #0F9D58 with 70% transparency */
         border-color: #1c4175; /* Border color to match */
         /* color: #fff; */
         border-radius: 5px;
         }
         .translucent-mask {
         display: none;
         position: fixed;
         top: 0vh;
         left: 0;
         width: 100%;
         height: 100vh;
         background-color: rgba(255, 255, 255, 0.5);
         backdrop-filter: blur(10px);
         display: flex;
         justify-content: center;
         align-items: center;
         }
         .center-content {
         text-align: center;
         }
         img {
         max-width: 100%; /* Resize proportionally to fit the screen, up to 100% of its container's width */
         height: auto;   /* Maintain aspect ratio */
         object-fit: contain;
        }
         .navbar-toggler:focus,
         .navbar-toggler:active,
         .navbar-toggler-icon:focus {
         outline: none;
         box-shadow: none;
         }
         .navbar-toggler {
         border: none;
         }
         .image-container {
         padding: 10px;
         }

    </style>
</head>
<body>
  <body>


    <nav class="navbar navbar-expand-lg navbar-light custom-navbar">
        
        <a class="navbar-brand mr-auto" href="/homepage" style="margin-left: 10px;">
            <div class="d-flex align-items-center">
                <div class="overflow-hidden" style="font-size:large; font-weight: bolder; color: #1c4175; margin-right: 10px;">
                    My App
                </div>
                <div class="overflow-hidden" style="font-size: smaller; font-weight: normal; color: #1c4175;">
                    <small>Subtitle</small>
                </div>
            </div>
        </a>

        <div class="position-relative mr-3 mt-2" id="navbarNav">
            <ul class="navbar-nav ms-auto mt-2 mt-lg-0">
                <a href="/" class="btn btn-primary">Join for free!</a>
            </ul>
        </div>
        
        
     </nav>


    <div class="container-fluid">
        <div class="row">
            <div class="col-md-6 mx-auto">
                <div id="blogheader" class="container-fluid ribbon-area"></div>
                <div id="preview" class="container-fluid"></div>
                <br>
                <% if (blog && blog.tags.length > 1) { %>
                <div class="tags-container">
                    <div id="tags" class="container-fluid"><i class="fa-solid fa-tags"></i></div>
                </div>
                <% } %>
                <br>
            </div>
        </div>
    </div>

    <% if (blog && blog.paywall) { %>
        <div class="translucent-mask">
            <div class="center-content">
                <p>This is a paid article. Join today to get full access!</p>
                <a href="/" class="btn btn-primary">Join for free!</a>
            </div>
        </div>
    <% } %>

    

    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <!-- Bootstrap core JS-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>


    <script>

    var quillpreview = new Quill('#preview', {
                readOnly: true,
                theme: 'snow'
    });

    var previewContainer = document.querySelector('#preview');
    var previewToolbar = previewContainer.previousElementSibling;

    if (previewToolbar && previewToolbar.classList.contains('ql-toolbar')) {
        previewToolbar.parentNode.removeChild(previewToolbar);
    }

        var blogheader = document.getElementById('blogheader');
        var previewDiv = document.getElementById('preview');
        var bloguserid;
        var blogid;

        document.addEventListener('DOMContentLoaded', function () {
            const url = new URL(window.location.href);
            const pathname = url.pathname;
            const parts = pathname.split('/');
            const blogid = parts[parts.length - 1];
            if (blogid !== null && blogid !== undefined) {
                loadBlogDetails(blogid);
            } 
        });
    
        function loadBlogDetails(blogId) {
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    var blogDetails = JSON.parse(xhr.responseText);
                    bloguserid = blogDetails.blog.userid;
                    blogid = blogDetails.blog._id;
                    updateBlogDetails(blogDetails);
                }
            };
            xhr.open('GET', `/index/blogs/public/blog/${blogId}`, true);
            xhr.send();
        }
    
        function updateBlogDetails(blogDetails) {
            var editorContent = blogDetails.blog.body;
            const dateObj = new Date(blogDetails.blog.timestamp);
            var timeToread = calculateReadingTime(blogDetails.blog.body, 230);
            const formatString = { month: 'short', day: 'numeric', year: 'numeric' };
            const formattedTime = dateObj.toLocaleString("en-US", formatString).toUpperCase();

            blogheader.innerHTML = `
                <h1 class="mt-4 blog-title">${blogDetails.blog.title}</h1>
                <p style="font-size: 22px; color: #686868">${blogDetails.blog.subtitle}</p>
                <div>
                    <p style="font-size: smaller; display: inline-block; margin-right: 10px;"><i class="fa-regular fa-pen-to-square"></i> ${blogDetails.blog.author}</p>
                    <p style="font-size: smaller; display: inline-block; margin-right: 10px;"><i class="fa-regular fa-calendar"></i> ${formattedTime}</p>
                    <p style="font-size: smaller; display: inline-block; margin-right: 10px;"><i class="far fa-clock"></i> ${timeToread}</p>
                </div> `;

            quillpreview.clipboard.dangerouslyPasteHTML(editorContent);

            // Insert tags
            var tags = blogDetails.blog.tags;
            var tagsDiv = document.getElementById('tags');

            if (tags.length > 0 && tagsDiv) {
                tagsDiv.style.display = "block";
                var tagsContainer = document.createElement('div');
                tagsContainer.classList.add('tags-container');

                tags.forEach(tag => {
                    var tagElement = document.createElement('span');
                    tagElement.classList.add('tag');
                    tagElement.textContent = tag + ', ';
                    tagsContainer.appendChild(tagElement);
                });

                // Append the container to the tagsDiv
                tagsDiv.appendChild(tagsContainer);
            } else {
                tagsDiv.style.display = "none";
            }

        }


        function calculateReadingTime(paragraph, wordsPerMinute) {
            // Assuming an average of 200 words per minute
            const defaultWordsPerMinute = 200;
            const wpm = wordsPerMinute || defaultWordsPerMinute;
            const wordCount = paragraph.split(/\s+/).length;
            const readingTime = Math.ceil(wordCount / wpm);

            return readingTime + ' MIN READ';
        }

    </script>

</body>
</html>