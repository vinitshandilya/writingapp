<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <script src="https://kit.fontawesome.com/03adeb66cc.js" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <title>The writing app</title>
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css"
        integrity="sha384-n8MVd4RsNIU0tAv4ct0nTaAbDJwPJzDEaqSD1odI+WdtXRGWt2kTvGFasHpSy3SV" crossorigin="anonymous">
    <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.js"
        integrity="sha384-XjKyOOlGwcjNTAIQHIpgOno0Hl1YQqzUOEleOLALmuqehneUG+vnGctmUb0ZY0l8"
        crossorigin="anonymous"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/contrib/auto-render.min.js"
        integrity="sha384-+VBxd3r6XgURycqtZ117nYw44OOcIax56Z4dCRWbxyPt0Koah1uHoK0o4+/RRE05" crossorigin="anonymous"
        onload="renderMathInElement(document.body);"></script>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Spectral:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,200;1,300;1,400;1,500;1,600;1,700;1,800&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="/app.css">


</head>
<body class="fullreaderarea">

    <nav class="navbar navbar-expand-lg navbar-light custom-navbar">
        <a class="navbar-brand mr-auto" href="/homepage" style="margin-left: 10px;">
            <div class="d-flex align-items-center">
                <div class="overflow-hidden" style="font-size:large; font-weight: bolder; color: #1c4175; margin-right: 10px;">
                    My App
                </div>
                <div class="overflow-hidden" style="font-size: smaller; font-weight: normal; color: #1c4175;">
                    <small>Subtitle</small>
                </div>
            </div>
        </a>
        <div class="position-relative mr-3 mt-2" id="navbarNav">
            <ul class="navbar-nav ms-auto mt-2 mt-lg-0">
                <a href="/" class="btn btn-primary">Join for free!</a>
            </ul>
        </div> 
    </nav>


    <div class="container-fluid">
        <div class="row">
            <div class="col-md-3 ml-3 mr-4 mt-4" id="toc-container" style="<%= blog && blog.paywall ? 'pointer-events: none;' : '' %>">
                <h6 id="tocheader" style="color: var(--color-titletext); font-weight: bolder;">Table of contents
                </h6>
                <div id="tableOfContents"></div>
            </div>

            <div class="col-md-6" id="article-container" style="position: relative; overflow: hidden; <%= blog && blog.paywall ? 'height: 100vh;' : '' %>">
                <div id="blogheader" class="container-fluid ribbon"></div>
                <div id="preview" class="container-fluid mt-4"></div>
                <br>
                <div class="tags-container" id="tags-container">
                    <div id="tags" class="container-fluid"><i class="fa-solid fa-hashtag mr-2"
                            style="color: var(--color-titletext);"></i></div>
                </div>
                <br>
                <% if (blog && blog.paywall) { %>
                    <div class="translucent-mask" id="translucentMask" style="width: 100%; height: 100%;">
                        <div class="d-flex flex-column align-items-center center-content text-center">
                            <h3>Unlock a World of Exclusive Content! Start Your 30-Day Trial Today!</h3>
                            <a style="margin-top: 20px;" href="/" class="btn btn-primary">Create an account</a>
                            <small style="margin-top: 20px;">Already a member? <a href="/login">Login</a></small>
                        </div>           
                    </div> 
                <% } %>       
            </div>

        </div>
    </div>

    

    

    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <!-- Bootstrap core JS-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>


    <script>

    const tagscontainer = document.getElementById('tags-container');

    var quillpreview = new Quill('#preview', {
                readOnly: true,
                theme: 'snow'
    });

    var previewContainer = document.querySelector('#preview');
    var previewToolbar = previewContainer.previousElementSibling;

    if (previewToolbar && previewToolbar.classList.contains('ql-toolbar')) {
        previewToolbar.parentNode.removeChild(previewToolbar);
    }

        var blogheader = document.getElementById('blogheader');
        var previewDiv = document.getElementById('preview');
        var bloguserid;
        var blogid;

        document.addEventListener('DOMContentLoaded', function () {
            const url = new URL(window.location.href);
            const pathname = url.pathname;
            const parts = pathname.split('/');
            const blogid = parts[parts.length - 1];
            if (blogid !== null && blogid !== undefined) {
                loadBlogDetails(blogid);
            } 
        });
    
        function loadBlogDetails(blogId) {
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    var blogDetails = JSON.parse(xhr.responseText);
                    bloguserid = blogDetails.blog.userid;
                    blogid = blogDetails.blog._id;
                    updateBlogDetails(blogDetails);
                }
            };
            xhr.open('GET', `/index/blogs/public/blog/${blogId}`, true);
            xhr.send();
        }
    
        function updateBlogDetails(blogDetails) {
            var editorContent = blogDetails.blog.body;
            const dateObj = new Date(blogDetails.blog.timestamp);
            var timeToread = calculateReadingTime(blogDetails.blog.body, 230);
            const formatString = { month: 'short', day: 'numeric', year: 'numeric' };
            const formattedTime = dateObj.toLocaleString("en-US", formatString).toUpperCase();

            blogheader.innerHTML = `
                    <h1 class="mt-4 blog-title">${blogDetails.blog.title}</h1>
                    <div class="row" style="display: flex; justify-content: flex-start; align-items: center;">
                        <div class="col" style="flex: 0;">
                            <div class="author-thumbnail">
                                <span class="initial" style="line-height: 1;">${blogDetails.blog.author.charAt(0).toUpperCase()}</span>
                            </div>
                        </div>

                        <div class="col" style="flex: 1;">
                            <h3 style="font-size: 20px; color: #919492">${blogDetails.blog.subtitle}</h3>
                            <div class="ribbon">
                                <p style="display: inline-block; margin-right: 10px;"><i class="fa-regular fa-pen-to-square"></i> ${blogDetails.blog.author}</p>
                                <p style="display: inline-block; margin-right: 10px;"><i class="fa-regular fa-calendar"></i> ${formattedTime}</p>
                                <p style="display: inline-block; margin-right: 10px;"><i class="far fa-clock"></i> ${timeToread}</p>
                            </div>
                        </div>
                    </div>
`;

            quillpreview.clipboard.dangerouslyPasteHTML(editorContent);
            generateTableOfContents(editorContent);

            // Insert tags
            var tags = blogDetails.blog.tags;
                var tagsDiv = document.getElementById('tags');

                if (tags.length > 1) {
                    tagscontainer.style.display = 'block';
                    tagsDiv.style.display = "block";
                    var tagsContainer = document.createElement('div');
                    tagsContainer.classList.add('tags-container');

                    tags.forEach(tag => {
                        var buttonElement = document.createElement('button');
                        buttonElement.type = 'button';
                        buttonElement.classList.add('homepage-btn-rounded');
                        buttonElement.disabled = true;
                        buttonElement.textContent = tag;

                        tagsContainer.appendChild(buttonElement);
                    });

                    // Append the container to the tagsDiv
                    tagsDiv.appendChild(tagsContainer);
                } else {
                    tagscontainer.style.display = 'none';
                    tagsDiv.style.display = "none";
                }

        }


        function calculateReadingTime(paragraph, wordsPerMinute) {
            // Assuming an average of 200 words per minute
            const defaultWordsPerMinute = 200;
            const wpm = wordsPerMinute || defaultWordsPerMinute;
            const wordCount = paragraph.split(/\s+/).length;
            const readingTime = Math.ceil(wordCount / wpm);

            return readingTime + ' MIN READ';
        }

        function scrollToHeader(index) {
                const headers = document.querySelectorAll('#preview h1, #preview h2, #preview h3');

                if (index >= 0 && index < headers.length) {
                    headers[index].scrollIntoView({ behavior: 'smooth' });
                }
            }

            function compareHeaderTags(headers) {
                const booleanArray = [];

                for (let i = 0; i < headers.length - 1; i++) {
                    const currentTag = parseInt(headers[i].tagName[1]); // Extract the numeric part from the tag name
                    const nextTag = parseInt(headers[i + 1].tagName[1]);

                    booleanArray.push(currentTag < nextTag);
                }

                return booleanArray;
            }

            function generateTableOfContents(htmlString) {
                const tocContainer = document.getElementById('tableOfContents');
                const tocheader = document.getElementById('tocheader');

                if (tocContainer) {
                    const tempContainer = document.createElement('div');
                    tempContainer.innerHTML = htmlString;

                    const headers = tempContainer.querySelectorAll('h1, h2, h3');

                    if (headers.length > 0) {
                        console.log('show tocheader');
                        tocheader.style.display = 'block';
                    } else {
                        console.log("don't show tocheader");
                        tocheader.style.display = 'none';
                    }



                    const ul = document.createElement('ul');
                    ul.classList.add('list-group'); // Add Bootstrap class for list group
                    let currentList = ul;
                    let previousLevel = 1;

                    const hasChild = compareHeaderTags(headers);

                    headers.forEach((header, index) => {
                        const headerLevel = parseInt(header.tagName.charAt(1));
                        const levelDiff = headerLevel - previousLevel;

                        const li = document.createElement('li');
                        li.classList.add('list-group-item');
                        const indicator = document.createElement('span');
                        indicator.classList.add('expand-indicator');

                        if (hasChild[index]) {
                            indicator.innerHTML = '<i class="fa-solid fa-angle-right" style="margin-right: 7px;"></i>';
                        } else {
                            indicator.innerHTML = '';
                        }

                        indicator.onclick = () => toggleChildren(li);

                        const a = document.createElement('a');
                        a.href = '#';
                        a.classList.add('text-decoration-none');
                        a.innerHTML = header.textContent;
                        a.onclick = () => scrollToHeader(index);

                        li.appendChild(indicator);
                        li.appendChild(a);

                        if (levelDiff > 0) {
                            for (let i = 0; i < levelDiff; i++) {
                                const nestedUl = document.createElement('ul');
                                const indicator = li.querySelector('.expand-indicator');

                                if (nestedUl) {
                                    const isCollapsed = nestedUl.classList.toggle('d-none');
                                    if (hasChild[index] && hasChild[index] !== undefined) {
                                        indicator.innerHTML = isCollapsed ? '<i class="fa-solid fa-angle-right" style="margin-right: 7px;"></i>' : '<i class="fa-solid fa-angle-down" style="margin-right: 7px;"></i>';
                                    } else {
                                        indicator.innerHTML = `<i class="fa-solid fa-angle-right" style="display: none;"></i>`;
                                    }

                                }
                                if (currentList.lastElementChild) {
                                    currentList.lastElementChild.appendChild(nestedUl);
                                    currentList = nestedUl;
                                }

                            }
                        } else if (levelDiff < 0) {
                            for (let i = 0; i < -levelDiff; i++) {
                                if (currentList.parentElement) {
                                    currentList = currentList.parentElement.parentElement;
                                }

                            }
                        }

                        currentList.appendChild(li);
                        previousLevel = headerLevel;
                    });

                    tocContainer.appendChild(ul);
                }
            }


            function toggleChildren(parent) {
                const nestedUl = parent.querySelector('ul');
                const indicator = parent.querySelector('.expand-indicator');
                console.log(nestedUl);
                if (nestedUl) {
                    const isCollapsed = nestedUl.classList.toggle('d-none');
                    indicator.innerHTML = isCollapsed ? '<i class="fa-solid fa-angle-right" style="margin-right: 7px;"></i>' : '<i class="fa-solid fa-angle-down" style="margin-right: 7px;"></i>';
                }
            }

    </script>
    <script type="module" src="/themeswitcher.js"></script>

</body>
</html>