<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>The writing app</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <script src="https://kit.fontawesome.com/03adeb66cc.js" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="app.css">

</head>

<body class="homepage-body">

    <% var displayName = loggedinuser.firstname ? loggedinuser.firstname : loggedinuser.username; %>
      <nav class="navbar navbar-expand-lg navbar-light custom-navbar">

        <a class="navbar-brand mr-auto" href="/homepage" style="margin-left: 10px;">
            <div class="d-flex align-items-center brand">
                <div class="overflow-hidden mr-2">
                    My App
                </div>
                <div class="overflow-hidden brand-subtitle">
                    <small>Subtitle</small>
                </div>
            </div>
        </a>

        <div class="col-auto">
            <a href="/index/createnew" class="start-new-button btn btn-sm ml-auto">
                Create New
            </a>
        </div>

        <button id="badge-container" type="button" class="position-relative badge-button mr-3 mt-2" data-bs-toggle="modal" data-bs-target="#notificationModal">
            <i class="fa-regular fa-bell"></i>
            <span id="red-badge" class="<%= loggedinuser.unreadnotification ? '' : 'visually-hidden' %> position-absolute top-0 start-100 translate-middle p-2 bg-danger border border-light rounded-circle">
                <span class="d-flex align-items-center justify-content-center" style="line-height: 1; font-size: xx-small; font-weight: bold; color: #fff; height: 100%;">
                    <%= loggedinuser.notifications.length %>
                </span>
            </span>
        </button>
        <!-- Note: Use 'visually-hidden' class on the button to hide notification bell -->
        

        
        <button type="button ml-auto" class="btn profile-btn">
            <div class="row no-gutters" style="display: flex; justify-content: center; align-items: center;">
                
                <div class="col" style="display: flex; justify-content: center; align-items: center;" onclick="window.location.href='/homepage'">
                    <!-- profile pic ---------------------------------------------------------------->
                    <div class="col">
                        <div class="circle">
                            <span class="initial" style="line-height: 1;"><%= displayName.charAt(0).toUpperCase() %></span>
                        </div>
                    </div>

                    <!-- name and email ---------------------------------------------------------->
                    <div class="col">
                        <div class="row no-gutters" style="white-space: nowrap; overflow: hidden; font-size: small;">
                            <div class="col" style="font-weight: bold;">
                                <%= `${loggedinuser.firstname} ${loggedinuser.lastname}` %>
                            </div>
                        </div>
                        <div class="row no-gutters" style="font-size: smaller;">
                            <div class="col">
                                <small class="d-block"><%= `${loggedinuser.email}` %></small>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- dropdown menu -------------------------------------------------------------->
                <div class="col">
                    <div class="dropdown show">
                        <a class="btn dropdown-toggle btn-ptr" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        </a>
                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                          <a class="dropdown-item" href="/homepage">Home</a>
                          <a class="dropdown-item" href="/homepage/dashboard">Dashboard</a>
                          <a class="dropdown-item" href="#">Settings</a>
                          <div class="dropdown-divider" style="background-color: #d7dbd7;"></div>
                            <div class="dropdown-item">
                                <div class="form-check form-switch mx-auto theme-switch">
                                    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
                                    <label class="form-check-label" for="flexSwitchCheckDefault">Dark Mode</label>
                                </div>
                            </div>
                            <div class="dropdown-divider" style="background-color: #d7dbd7;"></div>
                          <a class="dropdown-item" href="/logout">Logout</a>
                        </div>
                      </div>
                </div>

            </div>            
        </button>
      </nav>

    <!-- Responsive Layout using Bootstrap Grid -->
    <div class="container-fluid">
        <div class="row d-flex align-items-start">

            <!-- List on the left side -->
            <div class="col-md-8 card">
                <div class="d-flex justify-content-between align-items-end">
                    <h6 style="color: var(--color-subtitletext); font-weight: bolder;">For You</h6>
                    <!-- Dropdown Trigger -->
                    <h6 class="mt-4 dropdown-toggle" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fa-solid fa-arrow-down-wide-short"></i>
                    </h6>
                    <!-- Dropdown Menu -->
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        <a class="dropdown-item" href="#" data-value="last-updated" onclick="handleDropdownItemClick(event, this, `<%= JSON.stringify(personalblogs) %>`)">Last updated</a>
                        <a class="dropdown-item" href="#" data-value="created-date" onclick="handleDropdownItemClick(event, this, `<%= JSON.stringify(personalblogs) %>`)">Created date</a>
                        <a class="dropdown-item" href="#" data-value="a-to-z" onclick="handleDropdownItemClick(event, this, `<%= JSON.stringify(personalblogs) %>`)">A to Z</a>
                        <a class="dropdown-item" href="#" data-value="z-to-a" onclick="handleDropdownItemClick(event, this, `<%= JSON.stringify(personalblogs) %>`)">Z to A</a>
                    </div>
                </div>
                

                <div class="list-group">
                    <% personalblogs.forEach(personalblog => { %>
                    <a href="/index?id=<%= personalblog._id %>" data-blog-id="<%= personalblog._id %>" class="list-group-item list-group-item-action flex-column align-items-start big-list-item">
                
                        <div class="row">

                        <!-- Render blog image  -->
                        <div class="col-auto">
                           <% 
                               const bodyHtml = personalblog.body || ''; // Ensure personalblog.body is defined
                               // Define a regular expression to match the src attribute in an img tag
                               const imgSrcRegex = /<img[^>]*src=["']([^"']+)["']/i;
                               const match = bodyHtml.match(imgSrcRegex);
                               if (match) {
                                   // Extract the src attribute value
                                   const src = match[1];
                           %>
                                   <img src="<%= src %>" alt="Image" class="img-thumbnail">
                           <%
                               } else {
                                   // Display the default picture if no img tags are found
                           %>
                                   <img src="https://ak-d.tripcdn.com/images/1mi3e2224vymivgpcC549.jpg?proc=source/trip" alt="Default Image" class="img-thumbnail">
                           <%
                               }
                           %>
                       </div>
                       
                       <!-- Render ribbon area -->
                        <div class="col">
                            <small class="ribbon">
                                <% if (personalblog.userid === loggedinuser._id) { %>
                                    YOU &middot; <%= personalblog.formatteddate %> &middot; <%= personalblog.timetoread %>
                                <% } else { %>
                                    <%= personalblog.author %> &middot; <%= personalblog.formatteddate %> &middot; <%= personalblog.timetoread %>
                                <% } %>
                                
                                
                                <% if (personalblog.paywall) { %>
                                    <i class="fa-solid fa-crown" style="padding-left: 10px; color: var(--color-titletext);"></i>
                                <% } %>
                            </small>
                            <div class="d-flex w-100 justify-content-between">
                            <h5 class="mb-1 blog-list-title"><%= personalblog.title %></h5>
                                <%
                                function calculateElapsedTime(formattedDate) {
                                    var currentDate = new Date();
                                    var date = new Date(formattedDate);

                                    var timeDifference = currentDate - date;
                                    var daysDifference = Math.floor(timeDifference / (1000 * 60 * 60 * 24));

                                    if (daysDifference === 0) {
                                    return 'today';
                                    } else if (daysDifference === 1) {
                                    return 'yesterday';
                                    } else if (daysDifference < 7) {
                                    return daysDifference + ' days ago';
                                    } else {
                                    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });
                                    }
                                }

                                // Call the function with the formatted date from featuredblog
                                var elapsedTime = calculateElapsedTime(personalblog.formatteddate);
                                %>

                              <small class="timesince"><%= elapsedTime %></small>
                            </div>
                            <p class="mb-1 blog-list-subtitle"><%= personalblog.subtitle %></p>

                            <p class="mb-1 blog-list-body">
                                <% 
                                   var plainText = personalblog.body.replace(/<[^>]*>/g, '');
                                   plainText = plainText.replace(/\[[^\]]*\]/g, '');
                                   var truncatedText = plainText.length <= 200 ? plainText : plainText.substring(0, 200) + '...';
                                   %>
                                <%= truncatedText %>
                             </p>


                            <% if (personalblog.tags.length > 0) { %>
                                <% personalblog.tags.forEach(tag => { %>
                                    <% if(tag.trim().length !== 0) { %>
                                        <button type="button" class="btn-rounded" disabled><%= tag %></button>
                                    <% } %>
                                <% }) %>
                            <% } %>
                              
                        </div>
                
                        </div>
                    </a>
                    <% }); %>
                </div>


            </div>

            <!-- Text on the right side (moved below on smaller screens) -->
            <div class="col-md-4 mt-4">
                <div class="d-flex justify-content-between align-items-end">
                    <h6 style="font-weight: bold; color: var(--color-subtitletext);">Discover</h6>
                </div>
                <ul class="list-group overflow-auto" id="userList"></ul>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="notificationModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">Notifications</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
            <div class="list-group">
                <% loggedinuser.notifications.forEach(notification => { %>
                    <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                        <div class="d-flex w-100 justify-content-between">
                          <h5 class="mb-1"><%= notification.notiftext %></h5>
                          <small class="timesince">3 days ago</small>
                        </div>
                        <p class="mb-1"><%= notification.notiftext %></p>
                        <small class="timesince">Donec id elit non mi porta.</small>
                      </a>
                <% }) %>
            </div>
            </div>
        </div>
        </div>
    </div>
    

<!-- Bootstrap JS and dependencies (popper.js, jQuery) -->
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

<script>

const loggedinuserid = `<%= loggedinuser._id %>`;
var badgecontainer = document.getElementById('badge-container');

document.addEventListener("DOMContentLoaded", function () {
    var notificationModal = new bootstrap.Modal(document.getElementById('notificationModal'));
    notificationModal._element.addEventListener('hidden.bs.modal', clearNotification);
    buildDiscoverPeopleList();
    manageNotificationDisplay();
});

function manageNotificationDisplay() {
    const url = '/homepage/getnotificationcount';

    fetch(url)
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            console.log(`fetched notification count: ${data.count}`);
            if(data && data.count > 0) {
                
                // display notif
                badgecontainer.innerHTML = `
                    <i class="fa-regular fa-bell"></i>
                    <span id="red-badge" class="position-absolute top-0 start-100 translate-middle p-2 bg-danger border border-light rounded-circle" style="width: 1.25rem; height: 1.25rem;">
                        <span class="d-flex align-items-center justify-content-center" style="line-height: 1; font-size: xx-small; font-weight: bold; color: #fff; height: 100%;">
                            ${data.count}
                        </span>
                    </span>
                `;

            } else {
                badgecontainer.innerHTML = `
                    <i class="fa-regular fa-bell"></i>
                    <span id="red-badge" class="visually-hidden position-absolute top-0 start-100 translate-middle p-2 bg-danger border border-light rounded-circle" style="width: 1.25rem; height: 1.25rem;">
                        <span class="d-flex align-items-center justify-content-center" style="line-height: 1; font-size: xx-small; font-weight: bold; color: #fff; height: 100%;">
                            <%= loggedinuser.notifications.length %>
                        </span>
                    </span>
                `;
            }
            
        })
        .catch(error => {
            console.error('Error displaying notification:', error);
    });
}

    function clearNotification() { 
        const url = `/homepage/clearnotif/${loggedinuserid}`;

        fetch(url)
             .then(response => {
                 if (!response.ok) {
                     throw new Error(`HTTP error! Status: ${response.status}`);
                 }
                 return response.json();
             })
             .then(data => {
                console.log('cleared notification');
                console.log(data);
                if(data.cleared) {
                    badgecontainer.innerHTML = `
                    <i class="fa-regular fa-bell"></i>
                    <span id="red-badge" class="visually-hidden position-absolute top-0 start-100 translate-middle p-2 bg-danger border border-light rounded-circle" style="width: 1.25rem; height: 1.25rem;">
                        <span class="d-flex align-items-center justify-content-center" style="line-height: 1; font-size: xx-small; font-weight: bold; color: #fff; height: 100%;">
                            <%= loggedinuser.notifications.length %>
                        </span>
                    </span>
                `;
                } 
             })
             .catch(error => {
                 console.error('Error clearing notification:', error);
        });
    }

    function handleDropdownItemClick(event, clickedoption, personalblogs) {
            event.preventDefault();
            var selectedValue = clickedoption.getAttribute('data-value');
            // sort blogs
            if(selectedValue === 'a-to-z') {
                console.log('a-to-z clicked');
                console.log(personalblogs);
            }
    }

    async function buildDiscoverPeopleList() {
        // Fetch data from the API endpoint
        fetch('/homepage/getDiscoverPeople')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                const userList = document.getElementById('userList');
                userList.innerHTML = ``;
                data.discoverpeople.forEach(communityuser => {
                    // is data.loggedinuser._id included in communityuser.paidsubscribers array?
                    const displayName = communityuser.firstname ? `${communityuser.firstname} ${communityuser.lastname} (@${communityuser.username})` : communityuser.username;
                    const paidsubsindicator = communityuser.paidsubscribers.includes(data.loggedinuser._id) ? '<i class="fa-solid fa-certificate"></i>' : '';
                    var bio = communityuser.bio;
                    if(bio) {
                        if(bio.length > 50) {
                            bio = bio.substring(0, 50) + '...'
                        }
                    } else {
                        bio = '';
                    }
                    const buttonText = communityuser.followers.includes(data.loggedinuser._id) ? 'Unfollow' : 'Follow';
                    const buttonClass = communityuser.followers.includes(data.loggedinuser._id) ? 'button-following' : 'button-not-following';
                    const listItem = document.createElement('li');
                    listItem.innerHTML = `
                    <div class="row list-group-item d-flex justify-content-between align-items-center">
                        <div class="col">
                            <div class="row">
                                <h5 class="mb-1 user-list-title">${displayName}</h5>
                            </div>
                            <div class="row">
                                <small class="user-list-subtitle">${bio}</small>
                            </div>
                        </div>

                        <div class="col-auto">
                            <button class="btn btn-sm ${buttonClass} ml-auto" onclick="toggleFollowingFollowers(this, '${communityuser._id}', '${data.loggedinuser._id}')">
                                ${buttonText}
                            </button>
                        </div>
                    </div>
                    `;

                    userList.appendChild(listItem);
                });
            })
            .catch(error => {
                console.error('Error fetching data: ', error);
            });

    }

    async function toggleFollowingFollowers(button, communityUserId, loggedInUserId) {
        const url = '/index/toggleFollowingAndFollowers';
        const data = {
            loggedInUserId: loggedInUserId,
            communityUserId: communityUserId
        };

        try {
            const response = await fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
            });

            if (!response.ok) {
                console.error('HTTP POST request failed:', response.statusText);
                throw new Error(`HTTP error! Status: ${response.status}`);
            }

            const result = await response.json();
            console.log('Server response:', result);

            buildDiscoverPeopleList();

        } catch (error) {
            console.error('Error sending data to server:', error.message);
        }
    }

</script>
<script type="module" src="themeswitcher.js"></script>

</body>
</html>
