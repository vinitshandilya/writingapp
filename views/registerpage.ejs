<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>The Writing App</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Bootstrap JS (optional, if you need JavaScript features) -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://kit.fontawesome.com/03adeb66cc.js" crossorigin="anonymous"></script>
  <link rel="stylesheet" href="/app.css">

</head>

<body>

  <div class="register-container-fluid">
    <div class="row">

      <!-- Left Part -->
      <div class="col-md-6 register-left-part text-center d-none d-md-block" style="width: 50%;">

      </div>

      <!-- Right Part -->
      <div class="col-md-6 register-right-part">
        <div class="mb-md-5 mt-md-4 pb-5 text-center" style="width: 300px;">
          <h2 class="fw-bold mb-2">Create an account</h2>
          <p class="mb-4" style="color: gray; font-size: small;">Already a member? <a href="/login" class="fw-bold custom-link">Log in</a></p>

          <div id="firstregisterpage">
            <div class="mb-4">
              <input type="email" id="email" name="email" class="form-control form-control-lg register-form-input"
                placeholder="Enter Email Address" />
            </div>
            <button class="btn btn-lg px-5 register-submit-button" onclick="proceedToNext()">Next</button>
          </div>

          <div id="nextregisterpage" style="display: none;">
            <div class="mb-4">
              <input type="text" id="username" name="username" class="form-control form-control-lg register-form-input"
                placeholder="Username (no special characters)" />
            </div>
  
            <div class="mb-4">
              <input type="password" id="password" name="password"
                class="form-control form-control-lg register-form-input" placeholder="Password (at least 6 characters)" />
            </div>
            <button class="btn btn-lg px-5 register-submit-button" onclick="registerUser()">Register</button>
          </div>

          <div class="separator mt-5 mb-5">
            <div class="separator-line"></div>
            <div class="or-text">OR</div>
            <div class="separator-line"></div>
          </div>

          <div style="font-size: x-small; color: gray; line-height: 2.0;">
            <p>By clicking "Next", "Sign up with Google", or "Sign up with Apple" you agree to our <a class="custom-link" href="/">Terms of Use</a> and acknowledge that you've read and understood our <a class="custom-link" href="/">Privacy Policy</a>.</p>
          </div>

          <p id="servermessage"></p>

        </div>
      </div>


    </div>

    <script>
      const servermessageDiv = document.getElementById('servermessage');
      const firstregisterpageDiv = document.getElementById('firstregisterpage');
      const nextregisterpageDiv = document.getElementById('nextregisterpage');
      var email, username, password;

      document.addEventListener('DOMContentLoaded', function () {
        firstregisterpageDiv.style.display = 'block';
        nextregisterpageDiv.style.display = 'none';
      });

      function proceedToNext() {
        email = document.getElementById('email').value;
        firstregisterpageDiv.style.display = 'none';
        nextregisterpageDiv.style.display = 'block';
      }

      function registerUser() {
        username = document.getElementById('username').value;
        password = document.getElementById('password').value;

        // TODO: Validate registration fields before calling register API.
        // Add server side validation XSS attack checks as well

        var jsondata = {
          email: email,
          username: username,
          password: password
        };

        fetch('/register', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(jsondata)
        })
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json();
          })
          .then(data => {
            console.log(JSON.stringify(data));
            data.regstatus !== 'ok' ? servermessageDiv.style.color = 'red' : servermessageDiv.style.color = 'green';
            servermessageDiv.innerText = data.servermessage;
          })
          .catch(error => {
            console.error('There was a problem during registration:', error);
            // Handle error, if needed
          });

      }

    </script>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

</body>

</html>