<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap JS (optional, if you need JavaScript features) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <title>The writing app</title>
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <link href="indexpage.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/simplemde@1.11.2/dist/simplemde.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" crossorigin="anonymous">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Hedvig+Letters+Serif:opsz@12..24&display=swap" rel="stylesheet">

    <style>

        a {
            color: #B0A648;
        }

        .ql-footnote {
            color: #999;
        }

        .ql-footnote {
            position: relative;
            cursor: help;
        }

        .ql-footnote:hover::after {
            content: attr(fntitle);
            display: block;
            position: absolute;
            left: 100%;
            top: 0;
            width: 600px;
            max-width: 300px;
            white-space: normal;
            word-wrap: break-word;
            padding: 0.5em;
            background: #ffffff;
            border: 1px solid #d7d0d0;
            box-shadow: 2px 2px 5px rgba(41, 41, 41, 0.2);
            z-index: 1;
            border-radius: 15px;
            font-size: 13px;
            color: #333;
            line-height: 1.4;
        }

        .left-section {
            background-color: #fff;
            padding: 15px;
            height: 100vh;
        }

        .mid-section {
            background-color: #fff;
            padding: 15px;
            height: 100vh;
        }

        .right-section {
            background-color: #fff;
            height: 100vh;
            padding: 15px;
        }

        #footnoteList {
            margin-top: auto; /* Push to the bottom */
            list-style-type: none; /* Remove bullet points */
            padding: 0;
        }

        #footnoteList li {
            padding-left: 0px;
            font-size: 15px;
            font-family: 'Times New Roman', Times, serif;
            color: #585858;
        }

        /* figcaption {
            padding-left: 0px;
            padding-top: 15px;
            font-size: 15px;
            font-family: 'Times New Roman', Times, serif;
            color: #585858;
        } */

        .canvas {
            font-family: 'Hedvig Letters Serif', serif;
            line-height: 2.0;
        }

        .navbar {
            padding-left: 20px;
            padding-right: 20px;
            font-weight: bold;
        }

        .blog-title {
            color: #B0A648;
        }

        .ribbon-area {
            color: #B0A648;
        }

        #bookmark-icon {
            display: none;
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 24px;
            color: #007bff;
            cursor: pointer;
        }


    </style>
</head>
<body>
  <body>
    <% var displayName = loggedinuser.firstname ? loggedinuser.firstname : loggedinuser.username; %>

    <div class="d-flex" id="wrapper">
        <div id="page-content-wrapper">
            <!-- Top navigation-->
            <nav class="navbar navbar navbar-expand-lg navbar-light" style="background-color: transparent;">
                <a class="navbar-brand" href="/homepage"><i class="fa-solid fa-angle-left"></i></a></a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
                    <ul class="navbar-nav ms-auto mt-2 mt-lg-0">
                        <li class="nav-item"><a class="nav-link" style="margin-right: 15px;" href="/index/createnew" id="createNewLink"><i class="fa-solid fa-plus"></i></a></li>
                        <li class="nav-item"><a class="nav-link" style="margin-right: 15px;" href="#!" id="editLink"><i class="fa-regular fa-pen-to-square"></i></a></li>
                        <li class="nav-item"><a class="nav-link"style="margin-right: 15px;" href="#!" id="deleteLink" onclick="return confirm('Are you sure you want to delete this blog?')"><i class="fa-regular fa-trash-can"></i></a></li>
                        <li class="nav-item active"><a class="nav-link" href="/logout"><i class="fa-solid fa-arrow-right-from-bracket"></i></a></li>
                        <li class="nav-item active"><a class="nav-link" href="/index/profile"> <%= displayName %></a></li>
                    </ul>
                </div>
            </nav>

            <div class="container-fluid">
                <div class="row">
                    <!-- Left Section (25% width) -->
                    <div class="col-md-3 left-section">
                    </div>
            
                    <!-- Middle Section (50% width) -->
                    <div class="col-md-6 mid-section">
                        <div id="blogheader" class="container-fluid ribbon-area"></div>
                        <div id="preview" class="container-fluid canvas"></div>
                        <div id="bookmark-icon">&#128278;</div>
                        <br>
                        <hr>
                        <ul id="footnoteList"></ul>
                        <br>
                    </div>
            
                    <!-- Right Section (25% width) -->
                    <div class="col-md-3 right-section">
                    </div>

                </div>
            </div>
        </div>
    </div>

    

    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <!-- Bootstrap core JS-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Core theme JS-->
    <script src="script.js"></script>


    <script>

        var blogheader = document.getElementById('blogheader');
        var previewDiv = document.getElementById('preview');
        var markedUpDom;
        var bloguserid;
        var loggedinuserid;
        var blogid;

        document.addEventListener('DOMContentLoaded', function () {
            const urlParams = new URLSearchParams(window.location.search);
            var highlightBlogId = urlParams.get('id');

            if (highlightBlogId !== null && highlightBlogId !== undefined) {
                loadBlogDetails(highlightBlogId);
            } 
        });
    
        function loadBlogDetails(blogId) {
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    var blogDetails = JSON.parse(xhr.responseText);
                    //console.log(JSON.stringify(blogDetails));
                    bloguserid = blogDetails.blog.userid; // userid of the blog author, not the loggedin user.
                    loggedinuserid = blogDetails.loggedinuserid;
                    console.log(`bloguserid: ${bloguserid}, loggedinuserid: ${loggedinuserid}`);
                    blogid = blogDetails.blog._id;
                    updateBlogDetails(blogDetails);

                    if (bloguserid !== loggedinuserid) {
                        document.getElementById('editLink').style.display = 'none';
                        document.getElementById('deleteLink').style.display = 'none';
                    } else {
                        document.getElementById('editLink').style.display = 'block';
                        document.getElementById('deleteLink').style.display = 'block';
                    }
                }
            };
            xhr.open('GET', `/index/blogs/${blogId}`, true);
            xhr.send();
        }
    
        function updateBlogDetails(blogDetails) {

            var editorContent = blogDetails.blog.body;
            const dateObj = new Date(blogDetails.blog.timestamp);
            var timeToread = calculateReadingTime(blogDetails.blog.body, 230);
            const formatString = { month: 'short', day: 'numeric', year: 'numeric' };
            const formattedTime = dateObj.toLocaleString("en-US", formatString).toUpperCase();
            
            markedUpDom = recomputeRender(editorContent); // This is where we decide to parse footnotes, bookmarks, etc.

            blogheader.innerHTML = `
                <h1 class="mt-4 blog-title">${blogDetails.blog.title}</h1>
                <p style="font-size: 22px; color: #686868">${blogDetails.blog.subtitle}</p>
                <div>
                    <p style="font-size: smaller; display: inline-block; margin-right: 10px;"><i class="fa-regular fa-pen-to-square"></i> ${blogDetails.blog.author}</p>
                    <p style="font-size: smaller; display: inline-block; margin-right: 10px;"><i class="fa-regular fa-calendar"></i> ${formattedTime}</p>
                    <p style="font-size: smaller; display: inline-block; margin-right: 10px;"><i class="far fa-clock"></i> ${timeToread}</p>
                </div> `;

            previewDiv.innerHTML = `
                <div><p>${markedUpDom}</p></div>
            `;
            
            // Parse footnotes markup and add to page
            var footnotes = listFootnotes(markedUpDom);
            if(footnotes.length > 0) {
                var footnoteList = document.getElementById('footnoteList');
                var heading = document.createElement('h4');
                heading.innerText = 'Footnotes';
                heading.style.fontWeight = 'bold';
                heading.style.color = '#B0A648';
                footnoteList.appendChild(heading);

                footnotes.forEach(function (footnote) {
                    var listItem = document.createElement('li');
                    listItem.textContent = footnote;
                    footnoteList.appendChild(listItem);

                });
            }
            
            // Generate nav-bar links for blog update and delete
            var editLink = document.getElementById('editLink');
            if (editLink) {
                editLink.href = `/index/blogs/${blogDetails.blog._id}/edit`;
            }

            var deleteLink = document.getElementById('deleteLink');
            if (deleteLink) {
                deleteLink.href = `/index/blogs/${blogDetails.blog._id}/delete`;
            }            
        }

        // parse footnote markup and return updated html string
        function recomputeRender(domstr) {
            var counter = 1;
            var regex = /\[\^(.*?)\]/g; // Capture the text inside `[^]` using capturing group
            previewContent = domstr.replace(regex, function(match, customFootnote) {
                return `
                    <span class="ql-footnote" fntitle="${customFootnote}">
                        <sub>
                            <a href="your-link-url">[${(counter++)}]</a>
                        </sub>
                    </span>
                    `;
            });

            return previewContent;
        }


        function calculateReadingTime(paragraph, wordsPerMinute) {
            // Assuming an average of 200 words per minute
            const defaultWordsPerMinute = 200;
            const wpm = wordsPerMinute || defaultWordsPerMinute;
            const wordCount = paragraph.split(/\s+/).length;
            const readingTime = Math.ceil(wordCount / wpm);

            return readingTime + ' MIN READ';
        }

        function listFootnotes(domstr) {

            const parser = new DOMParser();
            const document = parser.parseFromString(domstr, "text/html");

            const footnotes = [];
            const footnoteElements = document.querySelectorAll('.ql-footnote');

            for (const element of footnoteElements) {
                const footnote_index = element.textContent;
                const fntitle = element.getAttribute('fntitle');

                if (fntitle) {
                    footnotes.push(`${footnote_index} ${fntitle}`);
                }
            }

            return footnotes;
        }

        function saveBlogUserMetadata(blogusermetadata) {
            fetch('/index/blogs/updateuserblogmetadata', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ blogusermetadata }),
            })
            .then(response => response.json())
            .then(data => console.log('Response from server:', data))
            .catch(error => console.error('Error sending data to server:', error));
        }

    </script>

</body>
</html>
