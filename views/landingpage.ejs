<!DOCTYPE html>
<html lang="en">
   <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
      <link rel="preconnect" href="https://fonts.googleapis.com">
      <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
      <link href="https://fonts.googleapis.com/css2?family=Hedvig+Letters+Serif:opsz@12..24&family=Libre+Baskerville:wght@700&display=swap" rel="stylesheet">
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" integrity="sha512-..." crossorigin="anonymous" />
      <title>My writing app</title>
      <style>
         .custom-banner {
         background-color: #eef5db;
         height: 50vh; /* 50% of the viewport height */
         }
         .banner-line {
            border: 0.5px solid white;
         }
         .custom-navbar {
         background-color: #eef5db;
         }
         .navbar-nav .nav-item .nav-link {
         color: #1c4175;
         font-size: small;
         }
         .top-mid-section {
         text-align: left;
         color: #1c4175;
         line-height: 2.3;
         }
         .top-left-section img {
         max-width: 100%; /* Ensure the image doesn't exceed the width of its container */
         height: auto; /* Maintain the aspect ratio of the image */
         display: block; /* Remove extra space below the image */
         margin: 0 auto; /* Center the image horizontally within the container */
         max-height: 300px; /* Set a maximum height for the image */
         }
         .heading-text {
         font-family: 'Hedvig Letters Serif', serif;
         font-family: 'Libre Baskerville', serif;
         }
         .sign-in {
         color: #1c4175;
         font-weight: bold;
         }
         .sign-in:hover {
         color: #1c4175;
         font-weight: bold;
         }
         .btn-primary {
         background-color: transparent;
         border-color: #1c4175;
         color: #1c4175;
         width: 200px;
         height: 50px;
         border-radius: 25px;
         }
         .btn-primary:hover {
         background-color: #1c4175;
         border-color: #1c4175;
         color: #fff;
         }
         .bottom-left {
         color: #1c4175;
         line-height: 2.0;

         }
         .bottom-right {
         color: #1c4175;
         line-height: 2.0;

         }
         .list-group-item {
         border: none !important;
         line-height: normal;
         border-top: 0px solid rgba(0, 0, 0, 0.125) !important;
         background-color: transparent !important;
         }
         .list-item-container {
         display: inline-block;
         margin-right: 5px;
         padding: 0 10px;
         }
         .big-list-item {
         border: none !important;
         line-height: 2.3;
         border-top: 1px solid rgba(0, 0, 0, 0.125) !important;
         background-color: transparent !important;
         font-weight: bold;
         }
         .blog-list-title {
         color: #1c4175;
         font-weight: bold;
         
         }
         .blog-list-subtitle {
         padding-top: 0px;
         color: #000;
         font-weight: normal;
         }
         .blog-list-body {
         font-weight: normal;
         /* font-family: 'Hedvig Letters Serif', serif; */
         font-size: small;
         line-height: 2.0;
         padding-bottom: 10px;
         }
         .btn-rounded {
         display: inline-block;
         background-color: transparent;
         border-color: #1c4175;
         color: #1c4175;
         border-width: 1px;
         box-shadow: none;
         border-radius: 15px;
         font-size: smaller;
         height: 30px;
         padding: 0 10px;
         margin-right: 5px;
         line-height: 30px;
         }
         .seemore-btn {
         border: none;
         background-color: transparent;
         color: #1c4175;
         font-size: smaller;
         height: 30px;
         padding: 0 10px;
         margin-right: 5px;
         line-height: 30px;
         }
         .seemore-btn:focus {
         outline: none; /* Remove the default focus outline */
         }
         .footer {
         height: 30vh; /* 50% of the viewport height */
         background-color: #fff; /* Set your desired background color */
         display: flex;
         justify-content: center;
         align-items: center;
         }
         .lower-half-container {
            padding-top: 20px;
         }

         .list-group {
            margin-top: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh; /* You may adjust this value based on your design */
         }

         .user-list-group {
            height: 100vh;
            margin-top: 10px;
         }

         .img-thumbnail {
            margin-top: 50%;
            border-radius: 50%;
            width: 100px;
            height: 100px;
            object-fit: cover;
         }


      </style>
   </head>
   <body>
      
      <!-- Navigation Bar -->
      <nav class="navbar navbar-expand-lg navbar-light custom-navbar">
         <a class="navbar-brand" href="#">CurioScribe</a>
         <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
         <span class="navbar-toggler-icon"></span>
         </button>
         <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ml-auto">
               <li class="nav-item">
                  <a class="nav-link" href="#">Our Mission</a>
               </li>
               <li class="nav-item">
                  <a class="nav-link" href="#">Write</a>
               </li>
               <li class="nav-item">
                  <a class="nav-link" href="#">Support</a>
               </li>
            </ul>
         </div>
      </nav>

      <!-- Top Section with Banner -->
      <div class="container-fluid text-white text-center py-5 custom-banner d-flex align-items-center justify-content-center">
         <div>
            <div class="container-fluid">
               <div class="row">
                  <!-- Top Left Section-->
                  <div class="col-md-1 top-left-section">
                     <!-- <img src="lamp1.png" alt="lamp"> -->
                  </div>
                  <!-- top Mid Section -->
                  <div class="col-md-10 top-mid-section">
                     <h1 class="heading-text">Unleash Your Voice, Share Your Story!</h1>
                     <p>Welcome to The CurioScribe, where every thought finds a home. Explore, express, and connect through the power of words. Your story matters, and this is the place to tell it.</p>
                     <button class="btn btn-primary" onclick="window.location.href='/register'">Get started</button>
                     <br>
                     <br>
                     <p>Already a member? <a class="sign-in" href="/login">Sign in</a></p>
                  </div>
                  <!-- Top Right Section -->
                  <div class="col-md-1">
                     
                  </div>
               </div>
            </div>
         </div>
      </div>
      <hr class="banner-line">

      <!-- Lower half -->
      <div class="container-fluid lower-half-container">
         <div class="row">

            <div class="col-lg-7 col-md-12 bottom-left">
               <!-- Lower left -->
               <h5><i class="fa-solid fa-chart-line"></i> Popular</h5>
               <div class="list-group">
                  <% featuredblogs.forEach(featuredblog => { %>
                  <a href="/index/blogs/public/<%= featuredblog._id %>" data-blog-id="<%= featuredblog._id %>" class="list-group-item list-group-item-action flex-column align-items-start big-list-item">
                     <div class="row">

                        <div class="col-auto">
                           <% 
                               const bodyHtml = featuredblog.body || ''; // Ensure featuredblog.body is defined
                               // Define a regular expression to match the src attribute in an img tag
                               const imgSrcRegex = /<img[^>]*src=["']([^"']+)["']/i;
                       
                               // Use the regular expression to find the src attribute
                               const match = bodyHtml.match(imgSrcRegex);
                       
                               // Check if a match is found
                               if (match) {
                                   const src = match[1];
                           %>
                                   <img src="<%= src %>" alt="Image" class="img-thumbnail">
                           <%
                               } else {
                                   // Display the default picture if no img tags are found
                           %>
                                   <img src="https://ak-d.tripcdn.com/images/1mi3e2224vymivgpcC549.jpg?proc=source/trip" alt="Default Image" class="img-thumbnail">
                           <%
                               }
                           %>
                       </div>
                       
                        
                        <div class="col">
                           <small class="text-muted">
                           <%= featuredblog.author %> &middot; <%= featuredblog.formatteddate %> &middot; <%= featuredblog.timetoread %>
                           <% if (featuredblog.paywall) { %>
                           <i class="fa-solid fa-crown" style="padding-left: 10px; color: #1c4175;"></i>
                           <% } %>
                           </small>
                           <div class="d-flex w-100 justify-content-between">
                              <h5 class="mb-1 blog-list-title"><%= featuredblog.title %></h5>

                              <%
                            // Define a function to calculate elapsed time
                            function calculateElapsedTime(formattedDate) {
                                var currentDate = new Date();
                                var date = new Date(formattedDate);

                                var timeDifference = currentDate - date;
                                var daysDifference = Math.floor(timeDifference / (1000 * 60 * 60 * 24));

                                if (daysDifference === 0) {
                                return 'today';
                                } else if (daysDifference === 1) {
                                return 'yesterday';
                                } else if (daysDifference < 7) {
                                return daysDifference + ' days ago';
                                } else {
                                return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });
                                }
                            }

                            // Call the function with the formatted date from featuredblog
                            var elapsedTime = calculateElapsedTime(featuredblog.formatteddate);
                            %>

                              <small class="text-muted"><%= elapsedTime %></small>
                           </div>
                           <p class="mb-1 blog-list-subtitle"><%= featuredblog.subtitle %></p>
                           <p class="mb-1 blog-list-body">
                              <% 
                                 var plainText = featuredblog.body.replace(/<[^>]*>/g, '');
                                 plainText = plainText.replace(/\[[^\]]*\]/g, '');
                                 var truncatedText = plainText.length <= 200 ? plainText : plainText.substring(0, 200) + '...';
                                 %>
                              <%= truncatedText %>
                           </p>
                           <% if (featuredblog.tags.length > 0) { %>
                           <% featuredblog.tags.forEach(tag => { %>
                           <% if(tag.trim().length !== 0) { %>
                              <button type="button" class="btn-rounded" disabled><%= tag %></button>
                           <% } %>
                           <% }) %>
                           <% } %>
                        </div>
                     </div>
                  </a>
                  <% }); %>
               </div>
            </div>

            <div class="col-lg-3 col-md-12 bottom-right">
               <!-- Lower right -->
               <h5><i class="fa-solid fa-glasses"></i> Discover topics</h5>
               <div id="tags" class="container-fluid tags"></div>
               <button class="seemore-btn" id="seemore-btn" onclick=toggleTagsview(this)>see more</button>
               <hr>
               <h5><i class="fa-solid fa-user-plus"></i> Top Voices</h5>
               <ul class="user-list-group" id="userList"></ul>

            </div>

            <div class="col-md-1">
               <!-- <img src="lamp1.png" alt="lamp"> -->
            </div>
         
         </div>
      </div>

      <div class="footer">
         
      </div>

      <!-- Bootstrap JS and jQuery -->
      <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
      <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
      
      <script>

        var isTagsExpanded = true;
        var tags;
        var tagsDiv = document.getElementById('tags');
        var tagsContainer = document.createElement('div');
        tagsContainer.classList.add('tags-container');

         document.addEventListener('DOMContentLoaded', function () {
             fetchTags();
             buildSuggestedPeopleList();
         });

         function fetchTags() {
             fetch('/gettags')
                 .then(response => {
                 if (!response.ok) {
                     throw new Error(`Network response was not ok: ${response.statusText}`);
                 }
                 return response.json();
                 })
                 .then(data => {
                 console.log('Fetched data:', data);
                 tags = data.tags;
                 displayTags(data.tags, 7);
                 })
                 .catch(error => {
                 console.error('Error during fetch:', error.message);
                 });
         }

         function displayTags(tags, count) {
            tagsContainer.innerHTML = ``;
            if(tags.length > 0) {
                     tagsDiv.style.display = "block";
                     tags.slice(0, count).forEach(tag => {
                        if(tag.trim().length !== 0) {
                           var buttonElement = document.createElement('button');
                           buttonElement.type = 'button';
                           buttonElement.classList.add('btn-rounded');
                           buttonElement.textContent = tag;
                           buttonElement.style.marginBottom = '10px';
                           tagsContainer.appendChild(buttonElement); 

                        }  
                     });

                     tagsDiv.appendChild(tagsContainer);

            } else {
                tagsDiv.style.display = "none";
            }
         }

         function toggleTagsview(button) {
            if(isTagsExpanded) {
                displayTags(tags, tags.length);
                button.textContent = 'see less'
                isTagsExpanded = false;
            } else {
                displayTags(tags, 7);
                button.textContent = 'see more'
                isTagsExpanded = true;
            }

         }
         

        async function buildSuggestedPeopleList() {
            fetch('/homepage/getSuggestedPeople')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    const userList = document.getElementById('userList');
                    userList.innerHTML = ``;
                    console.log(data.suggestedpeople);
                    data.suggestedpeople.forEach(communityuser => {
                    // is data.loggedinuser._id included in communityuser.paidsubscribers array?
                    const displayName = communityuser.firstname ? `${communityuser.firstname} ${communityuser.lastname} (@${communityuser.username})` : communityuser.username;
                    var bio = communityuser.bio;
                    if(bio) {
                        if(bio.length > 50) {
                            bio = bio.substring(0, 100) + '...'
                        }
                    } else {
                        bio = '';
                    }
                    const listItem = document.createElement('li');
                    listItem.className = 'list-group-item d-flex justify-content-between align-items-center';
                    listItem.innerHTML = `
                    <div class="flex-shrink-0" style="width: 250px;">
                        <h5 class="mb-1 user-list-title">${displayName}</h5>
                        <small class="user-list-subtitle">${bio}</small>
                    </div>
                    <button class="btn btn-sm ml-auto">
                            ${communityuser.followers.length}
                    </button>
                    `;

                        userList.appendChild(listItem);
                    });
                })
                .catch(error => {
                    console.error('Error fetching data: ', error);
                });

        }
         
      </script>
   </body>
</html>